<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.inext.dao.IOutOrdersDao">
	<resultMap id="BaseResultMap" type="com.inext.entity.OutOrders">
		<id column="id" property="id" />
		<result column="user_id" property="userId" />
		<result column="asset_order_id" property="assetOrderId" />

		<result column="order_type" property="orderType" />
		<result column="order_no" property="orderNo" />
		<result column="act" property="act" />
		<result column="req_params" property="reqParams" />
		<result column="return_params" property="returnParams" />
		<result column="notify_time" property="notifyTime" />
		<result column="notify_params" property="notifyParams" />
		<result column="add_time" property="addTime" />
		<result column="add_ip" property="addIp" />
		<result column="update_time" property="updateTime" />
		<result column="status" property="status" />
	</resultMap>
	<insert id="insert" parameterType="com.inext.entity.OutOrders" useGeneratedKeys="true"
			keyProperty="id">
		insert into out_orders
		(user_id,asset_order_id,order_type,order_no,act,req_params,add_ip,return_params,notify_params
		<if test="status != null">
			,status
		</if>
		)
		values
		(#{userId},#{assetOrderId},#{orderType},#{orderNo},#{act},#{reqParams},#{addIp},#{returnParams},#{notifyParams}
		<if test="status != null">
			,#{status}
		</if>
		)

	</insert>
	<update id="update" parameterType="com.inext.entity.OutOrders">
		update out_orders
		<set>
			<if test="returnParams != null">
				return_params = #{returnParams},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
			<if test="notifyParams != null">
				notify_params = #{notifyParams},
			</if>
			<if test="notifyTime != null">
				notify_time = #{notifyTime},
			</if>
		</set>
		where id=#{id}
	</update>
	<update id="updateByOrderNo" parameterType="com.inext.entity.OutOrders">
		update out_orders
		<set>
			<if test="returnParams != null">
				return_params = #{returnParams},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
			<if test="notifyParams != null">
				notify_params = #{notifyParams},
			</if>
			<if test="notifyTime != null">
				notify_time = #{notifyTime},
			</if>
		</set>
		where order_no=#{orderNo}
	</update>
	<select id="findById" parameterType="com.inext.entity.OutOrders" resultMap="BaseResultMap">
		select * from out_orders where id =#{id}
	</select>
	<select id="findByOrderNo" parameterType="com.inext.entity.OutOrders" resultMap="BaseResultMap">
		select * from out_orders where order_no =#{orderNo} order by id desc limit 1
	</select>




	<insert id="insertSelectiveStatus" parameterType="com.inext.entity.OutOrders"
			useGeneratedKeys="true" keyProperty="id">
		insert into out_orders
		(user_id,asset_order_id,order_type,order_no,act,req_params,add_ip,return_params,notify_params
		<if test="status != null">
			,status
		</if>
		)
		values
		(#{userId},#{assetOrderId},#{orderType},#{orderNo},#{act},#{reqParams},#{addIp},#{returnParams},#{notifyParams}
		<if test="status != null">
			,#{status}
		</if>
		)
	</insert>
	<update id="updateByIdSelectiveOrderNo" parameterType="com.inext.entity.OutOrders">
		update out_orders
		<set>
			<if test="returnParams != null">
				return_params = #{returnParams},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
			<if test="notifyParams != null">
				notify_params = #{notifyParams},
			</if>
			<if test="notifyTime != null">
				notify_time = #{notifyTime},
			</if>
		</set>
		where id=#{id}
		<if test="orderNo != null">
			and order_no = #{orderNo}
		</if>
	</update>
	<select id="findByIdByTablelastName" resultMap="BaseResultMap">
		select * from
		out_orders where id =#{id}
	</select>
	<select id="findByOrderNoByTablelastName" resultMap="BaseResultMap">
		select *
		from out_orders where order_no =#{orderNo}
	</select>
	<select id="findByOrderNoByTablelast" resultMap="BaseResultMap" statementType="STATEMENT">
		select *
		from ${tableName} s
		where 1=1
		<if test="status != null">
			and 	s.status = ${status}
		</if>
		<if test="act != null">
			and 	s.act = ${act}
		</if>
		and s.order_type="JSYH"
		order by s.id asc limit 0,${querylimit}
	</select>
</mapper>